<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="pocopoco_vplay.board.model.mapper.BoardMapper">
	<select id="selectCategory">
		SELECT
		c.views,
		c.content_no,
		c.content_title,
		m.menu_name,
		l.user_no AS likes_user,
		COUNT(l2.content_no) AS like_count,
		m.menu_no
		FROM content c
		LEFT JOIN board b ON c.content_no = b.content_no
		LEFT JOIN content_category cc ON c.content_no = cc.content_no
		LEFT JOIN category cg ON cc.category_no = cg.category_no
		LEFT JOIN menu m ON cg.menu_no = m.menu_no
		LEFT JOIN likes l ON c.content_no = l.content_no
		LEFT JOIN likes l2 ON l2.content_no = c.content_no
		WHERE b.board_type IS NULL
		AND l.user_no = #{userNo}
		AND m.menu_name IS NOT NULL
		<if test="menu != 'All'">
			AND m.menu_name = #{menu}
		</if>
		GROUP BY
		c.views, c.content_no, c.content_title, m.menu_name, l.user_no, c.create_date, m.menu_no
		<if test="sort == 'newest'">
			ORDER BY c.create_date
		</if>
		<if test="sort == 'mostView'">
			ORDER BY c.views DESC
		</if>
	</select>



	<select id="selectCategoryMyProjects">
		SELECT
		c.content_no,
		c.content_title,
		c.create_date,
		c.modify_date,
		c.content_status,
		c.delete_status,
		c.user_no,
		c.views,
		c.md_recommendation,
		b.board_type,
		m.menu_name,
		m.menu_no,
		(SELECT COUNT(*) FROM likes WHERE likes.content_no = c.content_no) AS like_count,
		STRING_AGG(ccc.category_name, ',' ORDER BY ccc.category_name) AS category_name
		FROM content c
		LEFT JOIN board b ON c.content_no = b.content_no
		LEFT JOIN content_category cc ON c.content_no = cc.content_no
		LEFT JOIN category ccc ON cc.category_no = ccc.category_no
		LEFT JOIN menu m ON ccc.menu_no = m.menu_no
		WHERE c.user_no = #{userNo}
		AND b.board_type IS NULL
		AND m.menu_name IS NOT NULL
		AND c.content_status = 'Y'
		<if test="menu != 'All'">
			AND m.menu_name = #{menu}
		</if>
		GROUP BY
		c.content_no,
		c.content_title,
		c.create_date,
		c.modify_date,
		c.content_status,
		c.delete_status,
		c.user_no,
		c.views,
		c.md_recommendation,
		b.board_type,
		m.menu_name,
		m.menu_no
		<if test="sort == 'newest'">
			ORDER BY c.create_date
		</if>
		<if test="sort == 'mostView'">
			ORDER BY c.views DESC
		</if>
	</select>


	<update id="throwBoardTrash">
		UPDATE content
		SET content_status =
		<choose>
			<when test="trashYN == 0">'N'</when>
			<when test="trashYN == 1">'Y'</when>
		</choose>
		WHERE content_no = #{contentNo}
	</update>

	<select id="selectMyTrash">
		SELECT
			c.content_no,
			c.content_title,
			c.create_date,
			c.modify_date,
			c.content_status,
			c.delete_status,
			c.user_no,
			c.views,
			c.md_recommendation,
			(SELECT COUNT(*) FROM likes WHERE likes.content_no = c.content_no) AS like_count,
			b.board_type,
			m.menu_name,
			STRING_AGG(ccc.category_name, ',' ORDER BY ccc.category_name) AS category_name
		FROM content c
				 LEFT JOIN board b ON c.content_no = b.content_no
				 LEFT JOIN content_category cc ON c.content_no = cc.content_no
				 LEFT JOIN category ccc ON cc.category_no = ccc.category_no
				 LEFT JOIN menu m ON ccc.menu_no = m.menu_no
		WHERE c.user_no = #{userNo}
		  AND b.board_type IS NULL
		  AND m.menu_name IS NOT NULL
		  AND c.content_status = 'N'
		GROUP BY
			c.content_no,
			c.content_title,
			c.create_date,
			c.modify_date,
			c.content_status,
			c.delete_status,
			c.user_no,
			c.views,
			c.md_recommendation,
			b.board_type,
			m.menu_name
	</select>


	<select id="selectCategoryMyTrash">
		SELECT
		c.*,
		(SELECT COUNT(*) FROM likes WHERE likes.content_no = c.content_no) AS like_count
		FROM content c
		LEFT JOIN board b ON c.content_no = b.content_no
		LEFT JOIN content_category cc ON c.content_no = cc.content_no
		LEFT JOIN category ccc ON cc.category_no = ccc.category_no
		LEFT JOIN menu m ON ccc.menu_no = m.menu_no
		WHERE c.user_no = #{userNo}
		AND b.board_type IS NULL
		AND m.menu_name IS NOT NULL
		AND c.content_status = 'N'
		<if test="menu != 'All'">
			AND m.menu_name = #{menu}
		</if>
		<if test="sort == 'newest'">
			ORDER BY c.create_date
		</if>
		<if test="sort == 'mostView'">
			ORDER BY c.views DESC
		</if>
	</select>

	<select id="allTemplateList">
		SELECT *
		FROM (
		SELECT
		STRING_AGG(cg.category_name, ',' ORDER BY cg.category_name) AS category_name,
		c.content_no,
		c.content_title,
		u.user_nickname,
		m.menu_no,
		m.menu_name,
		(SELECT COUNT(*) FROM likes lk WHERE lk.content_no = c.content_no) AS like_count,
		(SELECT COUNT(*) FROM downloads d WHERE d.content_no = c.content_no) AS download_count
		FROM content c
		LEFT JOIN users u ON c.user_no = u.user_no
		LEFT JOIN board b ON c.content_no = b.content_no
		LEFT JOIN content_category cc ON c.content_no = cc.content_no
		LEFT JOIN category cg ON cc.category_no = cg.category_no
		LEFT JOIN menu m ON cg.menu_no = m.menu_no
		LEFT JOIN likes lk2 ON c.content_no = lk2.content_no
		WHERE b.board_type IS NULL
		AND m.menu_name = #{menuName}
		AND c.content_status = 'Y'
		<if test="categoryArray != null">
			AND cg.category_name IN
			<foreach item="category" collection="categoryArray" open="(" separator="," close=")">
				#{category}
			</foreach>
		</if>
		<if test="search != null">
			AND c.content_title ILIKE '%' || #{search} || '%'
		</if>
		GROUP BY
		c.content_no,
		c.content_title,
		u.user_nickname,
		m.menu_no,
		m.menu_name
		ORDER BY c.content_no DESC
		)
		<if test="menuNameNum == 'video Templates'">
			LIMIT 3
		</if>
		<if test="menuNameNum == 'Music'">
			LIMIT 6
		</if>
		<if test="menuNameNum == 'Sound Effects'">
			LIMIT 6
		</if>
		<if test="menuNameNum == 'Graphic Templates'">
			LIMIT 3
		</if>
		<if test="menuNameNum == 'Stock Video'">
			LIMIT 3
		</if>
		<if test="menuNameNum == 'Photos'">
			LIMIT 3
		</if>
		<if test="menuNameNum == 'Fonts'">
			LIMIT 6
		</if>
		<if test="recentList != null">
			LIMIT 6
		</if>
	</select>

	<select id="menuLikeTo">
		SELECT COUNT(*)
		FROM likes
		WHERE user_no = #{userNo} AND content_no = #{contentNo}
	</select>


	<select id="selectMyInquiry">
		SELECT *
		FROM content
				 JOIN board ON content.content_no = board.content_no
		WHERE board.board_type = 1
		  AND content.user_no = #{userNo}
		  AND content.content_status = 'Y'
		ORDER BY content.create_date DESC
	</select>

	<select id="selectMyCommission">
		SELECT *
		FROM content
				 JOIN board ON content.content_no = board.content_no
		WHERE board.board_type = 2
		  AND content.user_no = #{userNo}
		  AND content.content_status = 'Y'
		ORDER BY content.create_date DESC
	</select>


	<insert id="insertInquiry" parameterType="Content">
		<selectKey resultType="int" keyProperty="contentNo" order="BEFORE">
			SELECT nextval('content_seq')
		</selectKey>
		INSERT INTO content (
		content_no,
		user_no,
		content_title,
		content_detail,
		create_date,
		modify_date,
		content_status,
		views
		) VALUES (
		#{contentNo},
		#{userNo},
		#{contentTitle},
		#{contentDetail},
		CURRENT_TIMESTAMP,
		CURRENT_TIMESTAMP,
		'Y',
		0
		)
	</insert>


	<insert id="insertBoard">
		INSERT INTO board (
			content_no,
			board_type,
			menu_no
		) VALUES (
					 #{contentNo},
					 1,
					 #{menuNo}
				 )
	</insert>

	<update id="updateInquiry" parameterType="Content">
		UPDATE content
		SET
			content_title = #{contentTitle},
			content_detail = #{contentDetail},
			modify_date = CURRENT_TIMESTAMP
		WHERE
			content_no = #{contentNo}
	</update>

	<update id="updateBoard">
		UPDATE board
		SET
			menu_no = #{menuNo}
		WHERE
			content_no = #{contentNo}
	</update>

	<select id="selectInquiry" resultType="Content">
		SELECT
			c.content_no,
			c.user_no,
			c.content_title,
			c.content_detail,
			c.create_date,
			c.modify_date,
			c.content_status,
			c.views,
			b.menu_no
		FROM content c
				 JOIN board b ON c.content_no = b.content_no
		WHERE c.content_no = #{contentNo}
	</select>


	<select id="selectReply">
		SELECT reply_detail
		FROM reply
		WHERE content_no = #{contentNo}
	</select>

	<select id="countReply">
		SELECT COUNT(*)
		FROM reply
		WHERE content_no = #{contentNo}
	</select>

	<select id="allCategory">
		SELECT *
		FROM category
		WHERE menu_no = #{menuNo}
	</select>

	<!-- 일단은 기본 쿼리랑 동일 -->
	<select id="allPopularCate">
		SELECT *
		FROM category
		WHERE menu_no = #{menuNo}
	</select>

	<select id="getrequestPostCount">
		SELECT COUNT(*)
		FROM content
		JOIN board ON content.content_no = board.content_no
		WHERE board_type = 2
		AND content_status = 'Y'
		<if test="menuNo != null">
			AND menu_no = #{menuNo}
		</if>
		<if test="search != null and search != ''">
			AND (content_title ILIKE '%' || #{search} || '%' OR content_detail ILIKE '%' || #{search} || '%')
		</if>
	</select>


	<select id="selectAllRequestPost">
		SELECT *
		FROM content
		JOIN board ON content.content_no = board.content_no
		JOIN menu ON board.menu_no = menu.menu_no
		WHERE board.board_type = 2
		AND content.content_status = 'Y'
		<if test="menuNo != null">
			AND menu.menu_no = #{menuNo}
		</if>
		<if test="search != null and search != ''">
			AND (content.content_title LIKE '%${search}%' OR content.content_detail LIKE '%${search}%')
		</if>
		ORDER BY content.content_no DESC
	</select>

	<select id="selectUser">
		SELECT user_nickname
		FROM users
		WHERE user_no = #{userNo}
	</select>

	<insert id="insertRequest">
		<selectKey resultType="int" keyProperty="contentNo" order="BEFORE">
			SELECT nextval('content_seq')
		</selectKey>
		INSERT INTO content (
		content_no,
		content_title,
		content_detail,
		create_date,
		modify_date,
		content_status,
		delete_status,
		user_no,
		views
		) VALUES (
		#{contentNo},
		#{contentTitle},
		#{contentDetail},
		CURRENT_TIMESTAMP,
		CURRENT_TIMESTAMP,
		DEFAULT,
		DEFAULT,
		#{userNo},
		DEFAULT
		)
	</insert>

	<insert id="insertRequestBoard">
		INSERT INTO board (content_no, board_type, menu_no)
		VALUES (#{contentNo}, 2, #{menuNo})
	</insert>

	<select id="selectRequest">
		SELECT *
		FROM content
				 LEFT JOIN users ON content.user_no = users.user_no
				 LEFT JOIN board ON content.content_no = board.content_no
				 LEFT JOIN menu ON board.menu_no = menu.menu_no
				 LEFT JOIN content_category ON content.content_no = content_category.content_no
				 LEFT JOIN category ON content_category.category_no = category.category_no
		WHERE content.content_status = 'Y'
		  AND content.content_no = #{bId}
	</select>

	<update id="updateCount">
		UPDATE content
		SET views = views + 1
		WHERE content_no = #{bId}
	</update>


	<select id="allMenuDetail" parameterType="int">
		SELECT
			c.content_no,
			c.content_title,
			c.content_detail,
			c.create_date,
			u.user_profile,
			c.modify_date,
			c.content_status,
			u.user_no,
			u.user_id,
			u.user_nickname,
			u.user_email,
			u.user_profile,
			m.menu_name,
			m.menu_no,
			(
				SELECT STRING_AGG(category_name, ',' ORDER BY category_name)
				FROM content_category cc
						 JOIN category cg ON cc.category_no = cg.category_no
				WHERE cc.content_no = c.content_no
			) AS category_name
		FROM content c
				 JOIN users u ON c.user_no = u.user_no
				 JOIN menu m ON (
			m.menu_no = (
				SELECT cg.menu_no
				FROM content_category cc
						 JOIN category cg ON cc.category_no = cg.category_no
				WHERE cc.content_no = c.content_no
				LIMIT 1
			)
			)
		WHERE c.content_no = #{contentNo}
	</select>

	<select id="contentFile">
		SELECT *
		FROM files
		WHERE ref_content_no = #{contentNo}
	</select>

	<select id="selectReplyList">
		SELECT
			r.reply_no,
			r.reply_detail,
			r.modify_date,
			u.user_nickname,
			u.user_profile AS userProfile
		FROM reply r
				 JOIN users u ON r.user_no = u.user_no
		WHERE r.content_no = #{bId}
		  AND r.reply_status = 'Y'
		ORDER BY r.reply_no DESC
	</select>

	<insert id="allTempLike">
		INSERT INTO likes
		VALUES (#{userNo}, #{contentNo})
	</insert>

	<delete id="unAllTempLike">
		DELETE FROM likes
		WHERE user_no = #{userNo} AND content_no = #{contentNo}
	</delete>

	<update id="updateRequest">
		UPDATE content
		SET content_title = #{contentTitle},
			modify_date = CURRENT_TIMESTAMP,
			content_detail = #{contentDetail}
		WHERE content_no = #{contentNo}
	</update>

	<update id="updateRequestMenu">
		UPDATE board
		SET menu_no = #{menuNo}
		WHERE content_no = #{contentNo}
	</update>

	<update id="deleteBoard">
		UPDATE content
		SET content_status = 'N'
		WHERE content_no = #{bId}
	</update>

	<select id="selectContentTop">
		SELECT
			c.content_no,
			c.content_title,
			c.create_date,
			c.modify_date,
			c.user_no,
			c.views,
			u.user_nickname,
			m.menu_no,
			m.menu_name,
			(SELECT COUNT(*) FROM likes l WHERE l.content_no = c.content_no) AS like_count,
			(SELECT COUNT(*) FROM downloads d WHERE d.content_no = c.content_no) AS download_count
		FROM content c
				 JOIN users u ON c.user_no = u.user_no
				 LEFT JOIN board b ON c.content_no = b.content_no
				 LEFT JOIN content_category cc ON c.content_no = cc.content_no
				 LEFT JOIN category cg ON cc.category_no = cg.category_no
				 LEFT JOIN menu m ON cg.menu_no = m.menu_no
				 LEFT JOIN likes l ON c.content_no = l.content_no
		WHERE b.board_type IS NULL
		  AND m.menu_name IS NOT NULL
		  AND c.content_status = 'Y'
		GROUP BY
			c.content_no, c.content_title, c.create_date,
			c.modify_date, c.user_no, c.views, u.user_nickname, m.menu_no, m.menu_name
		ORDER BY c.views DESC
			LIMIT 12
	</select>

	<select id="selectOrderByViews">
		SELECT * FROM content ORDER BY views DESC LIMIT 12
	</select>

	<insert id="insertReply">
		INSERT INTO reply (reply_no, reply_detail, create_date, modify_date, reply_status, content_no, user_no)
		VALUES (nextval('reply_seq'), #{replyDetail}, current_timestamp, current_timestamp, 'Y', #{contentNo}, #{userNo})
	</insert>

	<update id="updateReply">
		UPDATE reply
		SET reply_detail = #{replyDetail}, modify_date = current_timestamp
		WHERE reply_no = #{replyNo} AND user_no = #{userNo}
	</update>

	<delete id="deleteReply">
		DELETE FROM reply WHERE reply_no = #{replyNo}
	</delete>

	<select id="selectRequestList">
		SELECT * FROM content
						  JOIN board ON content.content_no = board.content_no
						  JOIN menu ON board.menu_no = menu.menu_no
						  JOIN users ON content.user_no = users.user_no
		WHERE menu.menu_no = #{menuNo} AND content.content_status = 'Y'
	</select>

	<select id="searchRequest">
		SELECT *
		FROM content
		JOIN users ON content.user_no = users.user_no
		JOIN board ON content.content_no = board.content_no
		JOIN menu ON board.menu_no = menu.menu_no
		<if test="searchValue != null and searchValue.trim() != ''">
			WHERE content.content_title LIKE CONCAT(CONCAT('%', #{searchValue}), '%')
			AND board.board_type = 2
			AND content.content_status = 'Y'
		</if>
	</select>

	<select id="menuCategoryList">
		SELECT category_name, category_no
		FROM category
		WHERE menu_no = #{menuNo}
	</select>

	<insert id="insertContent">
		<selectKey resultType="_int" keyProperty="contentNo" order="BEFORE">
			SELECT nextval('content_seq')
		</selectKey>
		INSERT INTO content (
		content_no, content_title, content_detail, create_date, modify_date,
		content_status, delete_status, user_no, views, md_recommendation
		) VALUES (
		#{contentNo}, #{contentTitle}, #{contentDetail}, DEFAULT, DEFAULT,
		DEFAULT, DEFAULT, #{userNo}, DEFAULT, DEFAULT
		)

	</insert>

	<insert id="insertContentCategory">
		<foreach collection="categoryNo" item="no" separator=";">
			INSERT INTO content_category (content_no, category_no)
			VALUES (#{contentNo}, #{no})
		</foreach>
	</insert>

	<insert id="insertThumbnailFile">
		INSERT INTO files (file_no, ref_content_no, file_location, upload_date, file_level, original_file_name)
		VALUES (nextval('file_seq'), #{contentNo}, #{tFileUrl}, current_timestamp, 1, #{tFileOriginalName})
	</insert>

	<insert id="insertContentFile">
		INSERT INTO files (file_no, ref_content_no, file_location, upload_date, file_level, original_file_name)
		VALUES (nextval('file_seq'), #{contentNo}, #{cFileUrl}, current_timestamp, 2, #{cFileOriginalName})
	</insert>

	<update id="updateRecommendation">
		UPDATE content
		SET md_recommendation = #{column}
		WHERE content_no = #{contentNo}
	</update>

	<select id="getMdRecommendationCount">
		SELECT COUNT(*) FROM content WHERE md_recommendation = 'Y'
	</select>

	<select id="selectMdList">
		SELECT *
		FROM (
				 SELECT
					 STRING_AGG(cg.category_name, ',' ORDER BY cg.category_name) AS category_name,
					 c.content_no,
					 c.content_title,
					 u.user_nickname,
					 m.menu_no,
					 (SELECT COUNT(*) FROM likes lk WHERE lk.content_no = c.content_no) AS like_count,
					 (SELECT COUNT(*) FROM downloads d WHERE d.content_no = c.content_no) AS download_count
				 FROM content c
						  LEFT JOIN users u ON c.user_no = u.user_no
						  LEFT JOIN board b ON c.content_no = b.content_no
						  LEFT JOIN content_category cc ON c.content_no = cc.content_no
						  LEFT JOIN category cg ON cc.category_no = cg.category_no
						  LEFT JOIN menu m ON cg.menu_no = m.menu_no
						  LEFT JOIN likes lk2 ON c.content_no = lk2.content_no
				 WHERE c.md_recommendation = 'Y'
				 GROUP BY c.content_no, c.content_title, u.user_nickname, m.menu_no
			 )
	</select>

	<select id="checkDownload">
		SELECT COUNT(*) FROM downloads
		WHERE user_no = #{userNo} AND content_no = #{contentNo}
	</select>

	<insert id="downloadRecord">
		INSERT INTO downloads
		VALUES (nextval('downloads_seq'), #{userNo}, #{contentNo})
	</insert>

	<update id="updateContent">
		UPDATE content
		SET content_title = #{contentTitle},
			content_detail = #{contentDetail},
			modify_date = current_timestamp
		WHERE content_no = #{contentNo}
	</update>

	<select id="selectFiles">
		SELECT * FROM files
		WHERE ref_content_no = #{contentNo}
	</select>

	<update id="updateTFile">
		UPDATE files
		SET file_location = #{newTFileURL}, original_file_name = #{tFileOriginalName}
		WHERE ref_content_no = #{contentNo} AND file_level = 1
	</update>

	<update id="updateCFile">
		UPDATE files
		SET file_location = #{newCFileURL}, original_file_name = #{cFileOriginalName}
		WHERE ref_content_no = #{contentNo} AND file_level = 2
	</update>

	<delete id="deleteContentCategory">
		DELETE FROM content_category
		WHERE content_no = #{contentNo}
	</delete>

	<select id="selectDownloadsCategorySort">
		SELECT
		c.content_no,
		c.content_title,
		c.create_date,
		c.modify_date,
		c.content_status,
		c.delete_status,
		c.user_no,
		c.views,
		c.md_recommendation,
		(SELECT COUNT(*) FROM likes l WHERE l.content_no = c.content_no) AS like_count,
		b.board_type,
		m.menu_name,
		m.menu_no,
		(
		SELECT STRING_AGG(cg.category_name, ',' ORDER BY cg.category_name)
		FROM content_category cc
		JOIN category cg ON cc.category_no = cg.category_no
		WHERE cc.content_no = c.content_no
		) AS category_name
		FROM content c
		LEFT JOIN board b ON c.content_no = b.content_no
		LEFT JOIN users u ON c.user_no = u.user_no
		LEFT JOIN downloads d ON c.content_no = d.content_no
		LEFT JOIN menu m ON (
		SELECT cg.menu_no
		FROM content_category cc
		JOIN category cg ON cc.category_no = cg.category_no
		WHERE cc.content_no = c.content_no
		LIMIT 1
		) = m.menu_no
		WHERE d.user_no = #{userNo}
		AND b.board_type IS NULL
		AND m.menu_name IS NOT NULL
		AND c.content_status = 'Y'
		<if test="menu != 'All'">
			AND m.menu_name = #{menu}
		</if>
		<if test="sort == 'newest'">
			ORDER BY c.create_date
		</if>
		<if test="sort == 'mostView'">
			ORDER BY c.views DESC
		</if>
	</select>

	<select id="selectRecommendedVideos" resultType="Content">
		SELECT
			C.CONTENT_NO,
			C.CONTENT_TITLE,
			C.USER_NICKNAME,
			F.FILE_LOCATION AS storedFileName FROM
			CONTENT C
				LEFT JOIN
			FILES F ON (C.CONTENT_NO = F.REF_CONTENT_NO) WHERE
			C.MD_RECOMMENDATION = 'Y'
		   AND F.FILE_LEVEL = 1
     </select>

	<select id="selectThumbnailFile" resultType="Files">
		SELECT
			FILE_LOCATION,
			ORIGINAL_FILE_NAME
		FROM
			FILES
		WHERE
			REF_CONTENT_NO = #{contentNo}
		  AND FILE_LEVEL = 1
    </select>


</mapper>