<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
		PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
		"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="pocopoco_vplay.users.model.mapper.UsersMapper">
	<select id="checkId">
		select count(*)
		from users
		where user_id=#{id}
	</select>

	<select id="signIn">
		select *
		from users
		where user_id = #{userId} and status ='Y'
	</select>


	<insert id="insertUser">
		INSERT INTO users (
			user_no, user_id, user_pw, user_nickname, user_name,
			user_phone, user_email, user_birth, user_gender, status,
			is_admin, join_date, user_comment, user_creator_rank, user_plan,
			user_profile, login_type, kakao_id, google_id  ) VALUES (
			nextval('user_seq'), #{userId}, #{userPw}, #{userNickname}, #{userName},
			#{userPhone}, #{userEmail}, #{userBirth}, #{userGender}, 'Y',
			'N', CURRENT_TIMESTAMP, DEFAULT, DEFAULT, DEFAULT,
			DEFAULT, #{loginType}, #{kakaoId}, #{googleId} )
	</insert>


	<select id="selectMyProject">
		SELECT
			c.content_title,
			c.views,
			c.content_no,
			menu.menu_no,
			menu.menu_name,
			(SELECT COUNT(*) FROM likes l2 WHERE l2.content_no = c.content_no) AS like_count
		FROM content c
				 LEFT JOIN likes l ON c.content_no = l.content_no
				 LEFT JOIN board b ON c.content_no = b.content_no
				 LEFT JOIN content_category cc ON c.content_no = cc.content_no
				 LEFT JOIN category cat ON cc.category_no = cat.category_no
				 LEFT JOIN menu ON cat.menu_no = menu.menu_no
		WHERE l.user_no = #{id}
		  AND b.board_type IS NULL
		  AND menu_name IS NOT NULL
		GROUP BY c.content_no, c.content_title, c.views, menu.menu_no, menu.menu_name
	</select>


	<select id="selectMyRealProjects">
		SELECT
			c.content_no,
			c.content_title,
			c.create_date,
			c.modify_date,
			c.content_status,
			c.delete_status,
			c.user_no,
			c.views,
			c.md_recommendation,
			(SELECT COUNT(*) FROM likes WHERE likes.content_no = c.content_no) AS like_count,
			b.board_type,
			m.menu_name,
			STRING_AGG(ccc.category_name, ',' ORDER BY ccc.category_name) AS category_name,
			m.menu_no
		FROM content c
				 LEFT JOIN board b ON c.content_no = b.content_no
				 LEFT JOIN content_category cc ON c.content_no = cc.content_no
				 LEFT JOIN category ccc ON cc.category_no = ccc.category_no
				 LEFT JOIN menu m ON ccc.menu_no = m.menu_no
		WHERE c.user_no = #{userNo}
		  AND b.board_type IS NULL
		  AND m.menu_name IS NOT NULL
		  AND c.content_status = 'Y'
		GROUP BY c.content_no, c.content_title, c.create_date, c.modify_date,
				 c.content_status, c.delete_status, c.user_no, c.views,
				 c.md_recommendation, b.board_type, m.menu_name, m.menu_no
	</select>

	<select id="selectuserIdPhone">
		SELECT COUNT(*)
		FROM users
		WHERE user_name =#{userName} AND user_phone =#{userPhone}
	</select>

	<select id="findfollow">
		select count(*)
		from subscribe
		where creater_no = #{userNo}
	</select>

	<select id="findId">
		SELECT user_id, user_name
		FROM users
		WHERE user_name =#{userName} AND user_phone =#{userPhone} AND user_email =#{userEmail}
	</select>

	<update id="updateInfo">
		update users
		set user_name = #{userName},
		user_nickname = #{userNickname},
		user_phone = #{userPhone},
		user_email = #{userEmail},
		user_birth = #{userBirth},
		user_gender = #{userGender},
		user_comment = #{userComment}
		where user_no = #{userNo}
	</update>

	<update id="changePw">
		update users
		set user_pw = #{userPw}
		where user_no = #{userNo}
	</update>

	<select id="findPw">
		select count(*)
		from users
		where user_id =#{userId} and user_phone = #{userPhone}
	</select>

	<update id="tempPwd">
		update users
		set USER_PW =#{userPw}
		where user_id =#{userId}
	</update>

	<select id="findName">
		select user_name
		from users
		where user_id =#{userId}
	</select>

	<select id="existUsers">
		SELECT *
		FROM users
		WHERE login_type = 'K' AND kakao_id = #{kakaoId}
	</select>

	<select id="existGoogleUsers">
		SELECT *
		FROM users
		WHERE login_type = 'G' AND google_id = #{googleId}
	</select>

	<select id="selectTopUser" resultType="pocopoco_vplay.users.model.vo.Users">
		SELECT
			u.user_no,
			u.user_id,
			u.user_nickname,
			u.user_name,
			u.user_phone,
			u.user_email,
			u.user_comment,
			u.user_profile,
			(SELECT COUNT(*) FROM subscribe s WHERE s.creater_no = u.user_no) AS subscriber
		FROM users u
		ORDER BY subscriber DESC
			LIMIT 12
	</select>

	<update id="updateUserPlan">
		update users
		set user_plan = #{userPlan}
		where user_no = #{userNo}
	</update>

	<select id="getPaymentDate">
		SELECT p.payment_date
		FROM users u
				 JOIN payment p USING (user_no)
		WHERE u.user_no = #{userNo}
		ORDER BY p.payment_date DESC
			LIMIT 1
	</select>

	<update id="deleteUserPlan">
		update users
		set user_plan = null where user_no=#{userNo}
	</update>

	<update id="updateAlertShown">
		update users
		set alert_shown=1 where user_no=#{userNo}
	</update>

	<update id="resetAlertShown">
		update users
		set alert_shown=0 where user_no=#{userNo}
	</update>

	<update id="updateProfile">
		update users
		set user_profile = #{userProfile}
		where user_id = #{userId}
	</update>

	<select id="selectProfile">
		select user_profile
		from users
		where user_id = #{userId}
	</select>

	<select id="existReceiver" resultType="int">
		SELECT COUNT(*) FROM users WHERE user_nickname = #{receiverName}
	</select>

	<insert id="insertMessage">
		INSERT INTO message (
		message_no, sender_no, receiver_no, content, sent_time, read_status, conversation_id
		) VALUES (
		nextval('message_seq'),
		#{senderNo},
		#{receiverNo},
		#{content},
		CURRENT_TIMESTAMP,
		DEFAULT,
		CASE
		WHEN #{senderNo} &lt; #{receiverNo}
		THEN #{senderNo} || '_' || #{receiverNo}
		ELSE #{receiverNo} || '_' || #{senderNo}
		END
		)
	</insert>

	<select id="getReceiverNo" resultType="int">
		SELECT user_no FROM users WHERE user_nickname = #{receiverName}
	</select>

	<select id="getUnreadMessageCount" resultType="int">
		SELECT COUNT(*) FROM message WHERE receiver_no = #{userNo} AND read_status = 'N'
	</select>

	<select id="selectMyDownloads">
		SELECT
			c.content_no,
			c.content_title,
			c.create_date,
			c.modify_date,
			c.content_status,
			c.delete_status,
			c.user_no,
			c.views,
			c.md_recommendation,
			(SELECT COUNT(*) FROM likes l WHERE l.content_no = c.content_no) AS like_count,
			b.board_type,
			m.menu_name,
			m.menu_no,
			(
				SELECT STRING_AGG(cg.category_name, ',' ORDER BY cg.category_name)
				FROM content_category cc
						 JOIN category cg ON cc.category_no = cg.category_no
				WHERE cc.content_no = c.content_no
			) AS category_name
		FROM content c
				 LEFT JOIN board b ON c.content_no = b.content_no
				 LEFT JOIN users u ON c.user_no = u.user_no
				 LEFT JOIN downloads d ON c.content_no = d.content_no
				 LEFT JOIN menu m ON (
			SELECT cg.menu_no
			FROM content_category cc
					 JOIN category cg ON cc.category_no = cg.category_no
			WHERE cc.content_no = c.content_no
			LIMIT 1
			) = m.menu_no
		WHERE d.user_no = #{userNo}
		  AND b.board_type IS NULL
		  AND m.menu_name IS NOT NULL
		  AND c.content_status = 'Y'
	</select>


	<select id="selectSubscribeList">
		SELECT
			s.creater_no,
			c.*,
			sc.subscriber_count,
			u2.*
		FROM users u
				 JOIN subscribe s ON u.user_no = s.user_no
				 JOIN content c ON c.user_no = s.creater_no
				 JOIN (
			SELECT creater_no, COUNT(user_no) AS subscriber_count
			FROM subscribe
			GROUP BY creater_no
		) sc ON sc.creater_no = s.creater_no
				 JOIN users u2 ON u2.user_no = s.creater_no
		WHERE s.user_no = #{userNo}
	</select>


	<select id="selectMyMessage">
		SELECT
		m.message_no,
		m.sender_no,
		sender_user.user_nickname AS sender_name,
		m.receiver_no,
		receiver_user.user_nickname AS receiver_name,
		m.content,
		m.sent_time,
		m.read_status,
		m.conversation_id
		FROM message m
		JOIN users sender_user ON m.sender_no = sender_user.user_no
		JOIN users receiver_user ON m.receiver_no = receiver_user.user_no
		WHERE m.receiver_no = #{userNo} OR m.sender_no = #{userNo}
		ORDER BY m.sent_time DESC
	</select>

	<update id="updateMessageStatus">
		update message
		set read_status = 'Y'
		where message_no = #{messageNo}
	</update>

	<select id="isSubscribed" resultType="int">
		SELECT COUNT(*) FROM subscribe
		WHERE creater_no = #{createrNo}
		  AND user_no = #{userNo}
	</select>

	<update id="updateSubscribe" parameterType="map">
		<choose>
			<when test="isCancel == true">
				DELETE FROM subscribe
				WHERE creater_no = #{createrNo} AND user_no = #{userNo}
			</when>
			<otherwise>
				<if test="isSubscribed == false">
					INSERT INTO subscribe (
					subscribe_no,
					creater_no,
					user_no
					) VALUES (
					nextval('subscribe_seq'),
					#{createrNo},
					#{userNo}
					)
				</if>
			</otherwise>
		</choose>
	</update>

	<select id="getInfoUser" resultType="pocopoco_vplay.users.model.vo.Users">
		SELECT * FROM users WHERE user_no = #{userNo}
	</select>

	<select id="checkPhone" resultType="int">
		SELECT COUNT(*) FROM users WHERE user_phone = #{userPhone}
	</select>

	<select id="checkEmail" resultType="int">
		SELECT COUNT(*) FROM users WHERE user_email = #{userEmail}
	</select>



</mapper>